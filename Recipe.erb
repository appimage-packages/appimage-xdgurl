#!/bin/bash
rm -rf /app || true # Clean up from previous runs
rm /out/* || true
mkdir -p /app/usr/bin /app/usr/share/applications/  /out

APP=<%= proper_name %>
LOWERAPP=<%= name %>

# Get helper functions
wget -q https://github.com/probonopd/AppImages/raw/master/functions.sh -O ./functions.sh
. ./functions.sh
rm -f functions.sh

function get_assistant {
 # Build AppImageKit
if [ ! -d AppImageKit ] ; then
  git clone  --depth 1 https://github.com/probonopd/AppImageKit.git /AppImageKit
fi
cd /AppImageKit/
git_pull_rebase_helper
./build.sh
chmod a+x ./AppImageAssistant*
cd ..
}

#get deps
yum -y install perl-URI.noarch gnome-icon-theme python33  python26 wxPython wxGTK

git clone https://github.com/xdgurl/xdgurl
cd xdgurl
make -j 8
make install

VERSION=$(git describe | sed -e 's/-g.*$// ; s/^v// ; s/-r.*$//')
echo Icon=emblem-web >> $LOWERAPP.desktop
cd ..

cat > AppRun << EOF
#!/bin/bash

export PYTHONPATH=/usr/lib64/python3.3:/usr/lib/python2.6:"$PYTHONPATH"
export LD_LIBRARY_PATH="/usr/lib/:/usr/lib64/:${LD_LIBRARY_PATH}"
export PATH="/:${PATH}"

exec /usr/bin/xdgurl "$@"

EOF
chmod +x AppRun

ARCH=$(arch)
get_assistant
mv /usr/local/bin/xdgurl /app/usr/bin/  || true
mv /usr/local/share/applications/xdgurl.desktop /app/usr/share/applications/
mv /usr/share/icons/gnome/scalable/emblems/emblem-web.svg  /app/  || true
cp AppRun /app/  || true

cd /
#delete_blacklisted
# We don't bundle the developer stuff
rm -rf usr/include || true
rm -rf usr/lib/pkgconfig || true
rm -rf usr/share/gettext || true
rm -rf usr/share/pkgconfig || true
rm -rf usr/share/cmake3 || true
rm -rf usr/share/cmake || true
rm -rf usr/local/* || true
rm -rf opt/* || true
rm -rf ./usr/mkspecs/ || true
find . -name '*.a' -exec rm {} \;

# Copy in the indirect dependencies
FILES=$(find . -type f -executable)
DEPS=""
for FILE in $FILES ; do
  ldd "${FILE}" | grep "=>" | awk '{print $3}' | xargs -I '{}' echo '{}' >> DEPSFILE
done
DEPS=$(cat DEPSFILE  |sort | uniq)
for FILE in $DEPS ; do
  if [ -f $FILE ] ; then
    echo $FILE
    cp --parents -rvfL $FILE /app/
  fi
done
rm -f DEPSFILE
# Add desktop integration
get_desktopintegration <%= name %>
# Copy desktop file in place

mkdir -p /$APP/$APP.AppDir/
cd /$APP/

mv /usr/bin/$LOWERAPP.wrapper /app/usr/bin/
mv -v ../app/* $APP.AppDir/

/AppImageKit/AppImageAssistant.AppDir/package <%= proper_name %>.AppDir/ /out/$APP-$VERSION-$ARCH.AppImage

#!/bin/bash

APP=<%= proper_name %>
LOWERAPP=<%= name %>

# Get helper functions
wget -q https://github.com/probonopd/AppImages/raw/master/functions.sh -O ./functions.sh
. ./functions.sh
rm -f functions.sh

#get deps
yum -y install perl-URI.noarch gnome-common gnome-icon-theme gtk2-devel tcl-devel tk-devel expect-devel mesa-libGLU-devel gstreamer-devel webkitgtk-devel \
gstreamer-plugins-base-devel freeglut-devel

function get_assistant {
  # Build AppImageKit
if [ ! -d AppImageKit ] ; then
  git clone  --depth 1 https://github.com/probonopd/AppImageKit.git /AppImageKit
fi

cd /AppImageKit/
git_pull_rebase_helper
sed s#\/usr\/share\/pyshared#\/usr\/lib\/python3.3#g AppImageAssistant.AppDir/AppRun
./build.sh
cp AppImageAssistant.AppDir/AppRun .
chmod a+x AppRun
chmod a+x ./AppImageAssistant*

cd ..
}

#deps
# Python 3.3.5:
wget http://python.org/ftp/python/3.3.5/Python-3.3.5.tar.xz
tar xf Python-3.3.5.tar.xz
cd Python-3.3.5
./configure --prefix=/usr/ --enable-shared LDFLAGS="-Wl,-rpath /usr/lib"
make && make altinstall

git clone https://github.com/wxWidgets/wxWidgets
cd wxWidgets
./configure --prefix=/usr/ --enable-shared LDFLAGS="-Wl,-rpath /usr/lib"
make && make install


git clone https://github.com/xdgurl/xdgurl
cd xdgurl
make -j 8
make install

VERSION=$(git describe | sed -e 's/-g.*$// ; s/^v//')

cd ..

rm -rf /app || true # Clean up from previous runs
rm /out/* || true
mkdir -p /app/usr/bin /app/usr/lib /app/usr/share/mime  /out

APPDIR=/app/
cd $APPDIR

# Copy in the indirect dependencies
FILES=$(find . -type f -executable)
DEPS=""
for FILE in $FILES ; do
  ldd "${FILE}" | grep "=>" | awk '{print $3}' | xargs -I '{}' echo '{}' > DEPSFILE
done
DEPS=$(cat DEPSFILE  |sort | uniq)
for FILE in $DEPS ; do
  if [ -f $FILE ] ; then
    echo $FILE
    cp --parents -rfL $FILE /apps/
  fi
done
rm -f DEPSFILE


ARCH=$(arch)
cd /app
delete_blacklisted
patch_usr

get_assistant
cp -ru /usr/share/mime/* /app/usr/share/mime

cp /usr/local/bin/xdgurl /app/usr/bin/
mv /usr/lib/python3.3 /app/usr/lib/
mv /usr/bin/python3* /app/usr/bin/
cp /usr/share/icons/gnome/scalable/emblems/emblem-web.svg  /app/
mv /usr/share/icons /app/usr/share/
mv  /AppImageKit/AppImageAssistant /app/
mv  /AppImageKit/AppImageExtract /app/
mv  /AppImageKit/AppImageMonitor /app/

# We don't bundle the developer stuff
rm -rf usr/include || true
rm -rf usr/lib/pkgconfig || true
rm -rf usr/share/gettext || true
rm -rf usr/share/pkgconfig || true
rm -rf usr/share/cmake3 || true
rm -rf usr/share/cmake || true
rm -rf usr/local/Qt*
rm -rf rm -rf ./usr/mkspecs/ || true
find . -name '*.a' -exec rm {} \;



cd /
# Copy desktop file in place
DESKTOP=$(find . -name "*$LOWERAPP.desktop" | head -n 1)
cp $DESKTOP . || true
echo $DESKTOP
echo Icon=emblem-web >> $LOWERAPP.desktop
cat $LOWERAPP.desktop
# Add desktop integration
get_desktopintegration <%= name %>
mv /usr/bin/$LOWERAPP.wrapper /app/usr/bin/
mkdir -p /$APP/$APP.AppDir
cd /$APP/

mv ../app/* $APP.AppDir/
cp /$LOWERAPP.desktop  $APP.AppDir/
update-mime-database $APP.AppDir/usr/share/mime/

/AppImageKit/AppImageAssistant.AppDir/package <%= proper_name %>.AppDir/ /out/$APP-$VERSION-$ARCH.AppImage

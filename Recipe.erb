#!/bin/bash

# Get helper functions
wget -q https://github.com/probonopd/AppImages/raw/master/functions.sh -O ./functions.sh
. ./functions.sh
rm -f functions.sh

#get deps
yum -y install perl-URI.noarch gnome-common rpm-build rh-python34-python-tkinter tkinter glib2-devel

function make_dirs {
  mkdir -p $APP/$APP.AppDir || echo ""
}

function extract_packages {
  FILES=$(find ../ -name *rpm)
  for FILE in $FILES ; do
    rpm2cpio "${FILE}" | cpio -i --make-directories
  done
}

function copy_desktop {
  find . -name *desktop -exec cp {} . \;
}

function make_apprun_skel {
cat > ./AppRun <<\EOF
#!/bin/sh

# Base environment variables
export LD_LIBRARY_PATH=${APPDIR}/lib:${LD_LIBRARY_PATH}
export PATH=${APPDIR}/bin:${PATH}
export XDG_DATA_DIRS=${APPDIR}/share:${XDG_DATA_DIRS}
# GTK+/GIO/GdkPixbuf environment variables
# http://askubuntu.com/questions/251712/how-can-i-install-a-gsettings-schema-without-root-privileges
export GSETTINGS_SCHEMA_DIR=${APPDIR}/share/glib-2.0/schemas/:${GSETTINGS_SCHEMA_DIR}
export GDK_PIXBUF_MODULE_FILE=${APPDIR}/lib/gdk-pixbuf-2.0/2.10.0/loaders.cache
export GTK_PATH=${APPDIR}/lib/gtk-3.0
export GTK_DATA_PREFIX=${APPDIR}
export GTK_THEME=Adwaita

# Currently we change into the APPDIR directory, this only because of gdk-pixbuf
# and pango cache files which need to specify relative paths.
cd ${APPDIR}

if test -z ${APP_IMAGE_TEST}; then
    # Invoke the app with the arguments passed
    ${APPDIR}/bin/pitivi $*
else
    # Run a shell in test mode
    bash;
fi

# Cleaning up the link to gstplugins
rm ${PLUGINS_SYMLINK}
EOF
chmod a+x ./AppRun
}

function patch_usr {
  find . -type f -exec sed -i -e 's|/usr|././|g' {} \;
}

function get_assistant {
  # Build AppImageKit
if [ ! -d AppImageKit ] ; then
  git clone  --depth 1 https://github.com/probonopd/AppImageKit.git /AppImageKit
fi

cd /AppImageKit/
git_pull_rebase_helper
./build.sh

chmod a+x ./AppImageAssistant*
}

function make_appdir {
  /AppImageKit/AppImageAssistant.AppDir/package <%= proper_name %>.AppDir/ /out/$APP-$VERSION-$ARCH.AppImage
}

#deps


APP=<%= name %>
git clone https://github.com/xdgurl/xdgurl
cd xdgurl/pkg/fedora
sed  -i s/python3-tkinter/rh-python34-python-tkinter/g xdgurl.spec
sh build.sh
rpm -i /root/rpmbuild/RPMS/x86_64/xdgurl-1.0.0-1.el6.x86_64.rpm


cd ..

VERSION=$(git describe | sed -e 's/-g.*$// ; s/^v//')
cd ..
mkdir -p $APP.AppDir
cd "${APP}.AppDir"
extract_packages
patch_usr
copy_desktop
make_apprun_skel
echo "./bin/xdgurl $@" >> AppRun
cd -
get_assistant
make_appdir "${APPNAME}" "${VERSION}"



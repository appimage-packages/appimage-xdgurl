#!/bin/bash

APP=<%= proper_name %>
LOWERAPP=<%= name %>

# Get helper functions
wget -q https://github.com/probonopd/AppImages/raw/master/functions.sh -O ./functions.sh
. ./functions.sh
rm -f functions.sh

#get deps
yum -y install perl-URI.noarch gnome-common rpm-build gnome-icon-theme rh-python34-python-tkinter \
 python27-tkinter tkinter wxPython rh-python34 python27

function patch_usr {
  find . -type f -exec sed -i -e 's|/usr|././|g' {} \;
}

function get_assistant {
  # Build AppImageKit
if [ ! -d AppImageKit ] ; then
  git clone  --depth 1 https://github.com/probonopd/AppImageKit.git /AppImageKit
fi

cd /AppImageKit/
git_pull_rebase_helper
./build.sh

chmod a+x ./AppImageAssistant*

cd ..
}

#deps


git clone https://github.com/xdgurl/xdgurl
cd ../../xdgurl/pkg/fedora


VERSION=$(git describe | sed -e 's/-g.*$// ; s/^v// ; s/-r.*$//')
sed  -i s/python3-tkinter/rh-python34-python-tkinter\ python27-tkinter\ tkinter\ wxPython\ rh-python34\ python27/g xdgurl.spec
cd ..
sh build.sh fedora

rpm -i /xdgurl/pkg/build/RPMS/x86_64/xdgurl-1.0.1-1.el6.x86_64.rpm



rm -rf /app || true # Clean up from previous runs
rm /out/* || true
mkdir -p /app/usr/bin /app/usr/lib /app/usr/share/mime /app/opt/rh /app/lib /out

APPDIR=/app/
cd $APPDIR

FILES=$(rpm -qla $LOWERAPP)
for FILE in $FILES ; do
  if [ -f $FILE ] ; then
    echo $FILE
    cp --parents -rfL $FILE ./
  fi
done

# Copy in the indirect dependencies
FILES=$(find . -type f -executable)
DEPS=""
for FILE in $FILES ; do
  ldd "${FILE}" | grep "=>" | awk '{print $3}' | xargs -I '{}' echo '{}' > DEPSFILE
done
DEPS=$(cat DEPSFILE  |sort | uniq)
for FILE in $DEPS ; do
  if [ -f $FILE ] ; then
    echo $FILE
    cp --parents -rfL $FILE ./
  fi
done
rm -f DEPSFILE

# We want everything in usr/ inside the AppDir
mv lib/* usr/lib/ || true
rm -rf ./lib* || true


delete_blacklisted

if [ "$VERSION" == "" ] ; then
  echo "Cannot determine version from rpm"
  exit 1
fi
get_apprun
get_assistant
ARCH=$(arch)
cd /app

delete_blacklisted

cp -ru /usr/share/mime/* /app/usr/share/mime
update-mime-database /app/usr/share/mime/

copy_deps
mkdir -p /app/lib /app/usr/share /app/etc
cp -rfv /lib64/*  /app/lib/
cp -rfv /usr/share /app/usr/share
cp -rfv /etc /app/etc
mv  /AppImageKit/AppImageAssistant /app/
mv  /AppImageKit/AppImageExtract /app/
mv  /AppImageKit/AppImageMonitor /app/
mv /opt/rh/* /app/opt/rh/
rm  -rf ./opt/


# We don't bundle the developer stuff
rm -rf usr/include || true
rm -rf usr/lib/pkgconfig || true
rm -rf usr/share/gettext || true
rm -rf usr/share/pkgconfig || true
rm -rf usr/share/cmake3 || true
rm -rf rm -rf ./usr/mkspecs/ || true
find . -name '*.a' -exec rm {} \;

strip -g $(find usr) || true




cd /
# Copy desktop file in place
DESKTOP=$(find . -name "*$LOWERAPP.desktop" | head -n 1)
cp $DESKTOP . || true
echo $DESKTOP
echo Icon=emblem-web >> $LOWERAPP.desktop
cat $LOWERAPP.desktop
VERSION=$(rpm -qa | grep ^$LOWERAPP- | cut -d - -f 2)
echo $VERSION
# Add desktop integration
get_desktopintegration <%= name %>
mv /usr/bin/$LOWERAPP.wrapper /app/usr/bin/
mkdir -p /$APP/$APP.AppDir
cd /$APP/

mv ../app/* $APP.AppDir/
cp /$LOWERAPP.desktop  $APP.AppDir/
cp /usr/share/icons/gnome/scalable/emblems/emblem-web.svg  $APP.AppDir/
/AppImageKit/AppImageAssistant.AppDir/package <%= proper_name %>.AppDir/ /out/$APP-$VERSION-$ARCH.AppImage
